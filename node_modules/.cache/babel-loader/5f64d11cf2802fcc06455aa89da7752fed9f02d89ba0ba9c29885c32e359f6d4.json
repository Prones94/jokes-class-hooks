{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from \"axios\";\nimport Joke from './Joke';\nfunction JokeList({\n  numJokesToGet = 5\n}) {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const getJokes = useCallback(async () => {\n    try {\n      let jokes = [];\n      let seenJokes = new Set();\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          id,\n          joke\n        } = res.data;\n        if (!seenJokes.has(id)) {\n          seenJokes.add(id);\n          jokes.push({\n            id,\n            joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found\");\n        }\n      }\n      setJokes(jokes);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n}\n_s(JokeList, \"JYcqOeTfKFyKdT6+cmdfFgnMUQU=\");\n_c = JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Joke","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","seenJokes","Set","length","res","get","headers","Accept","id","joke","data","has","add","push","votes","console","log","err","error","_c","$RefreshReg$"],"sources":["/Users/ianrones/Desktop/Coding/Springboard/React/react-jokes-classes/src/JokeList.js"],"sourcesContent":["\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from \"axios\"\nimport Joke from './Joke'\n\nfunction JokeList({ numJokesToGet = 5}) {\n  const [jokes, setJokes] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  const getJokes = useCallback(async () => {\n    try {\n      let jokes = []\n      let seenJokes = new Set()\n\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        })\n        let { id, joke } = res.data\n\n        if (!seenJokes.has(id)){\n          seenJokes.add(id)\n          jokes.push({ id, joke, votes: 0})\n        } else {\n          console.log(\"duplicate found\");\n        }\n      }\n\n      setJokes(jokes)\n      setIsLoading(false)\n    } catch(err){\n      console.error(err)\n    }\n  })\n}\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,SAASC,QAAQA,CAAC;EAAEC,aAAa,GAAG;AAAC,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvC,IAAI;MACF,IAAIM,KAAK,GAAG,EAAE;MACd,IAAIK,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;MAEzB,OAAON,KAAK,CAACO,MAAM,GAAGT,aAAa,EAAE;QACnC,IAAIU,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,4BAA4B,EAAE;UACtDC,OAAO,EAAE;YAAEC,MAAM,EAAE;UAAmB;QACxC,CAAC,CAAC;QACF,IAAI;UAAEC,EAAE;UAAEC;QAAK,CAAC,GAAGL,GAAG,CAACM,IAAI;QAE3B,IAAI,CAACT,SAAS,CAACU,GAAG,CAACH,EAAE,CAAC,EAAC;UACrBP,SAAS,CAACW,GAAG,CAACJ,EAAE,CAAC;UACjBZ,KAAK,CAACiB,IAAI,CAAC;YAAEL,EAAE;YAAEC,IAAI;YAAEK,KAAK,EAAE;UAAC,CAAC,CAAC;QACnC,CAAC,MAAM;UACLC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAChC;MACF;MAEAnB,QAAQ,CAACD,KAAK,CAAC;MACfG,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAMkB,GAAG,EAAC;MACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACpB;EACF,CAAC,CAAC;AACJ;AAACtB,EAAA,CA7BQF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}