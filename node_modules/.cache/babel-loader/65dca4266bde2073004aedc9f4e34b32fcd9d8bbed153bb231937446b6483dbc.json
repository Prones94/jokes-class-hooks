{"ast":null,"code":"var _jsxFileName = \"/Users/ianrones/Desktop/Coding/Springboard/React/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from \"axios\";\nimport Joke from './Joke';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList({\n  numJokesToGet = 5\n}) {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const getJokes = useCallback(async () => {\n    try {\n      let jokes = [];\n      let seenJokes = new Set();\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          id,\n          joke\n        } = res.data;\n        if (!seenJokes.has(id)) {\n          seenJokes.add(id);\n          jokes.push({\n            id,\n            joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found\");\n        }\n      }\n      setJokes(jokes);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [numJokesToGet]);\n  useEffect(() => {\n    getJokes();\n  }, [getJokes]);\n  const generateNewJokes = () => {\n    setIsLoading(true);\n    getJokes();\n  };\n  const vote = (id, delta) => {\n    setJokes(jokes => jokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get N\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(JokeList, \"cqeTehAR4yJfYvBYCea6qy7KG44=\");\n_c = JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","seenJokes","Set","length","res","get","headers","Accept","id","joke","data","has","add","push","votes","console","log","err","error","generateNewJokes","vote","delta","map","j","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedJokes","sort","a","b","onClick","_c","$RefreshReg$"],"sources":["/Users/ianrones/Desktop/Coding/Springboard/React/react-jokes-classes/src/JokeList.js"],"sourcesContent":["\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from \"axios\"\nimport Joke from './Joke'\n\nfunction JokeList({ numJokesToGet = 5}) {\n  const [jokes, setJokes] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  const getJokes = useCallback(async () => {\n    try {\n      let jokes = []\n      let seenJokes = new Set()\n\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        })\n        let { id, joke } = res.data\n\n        if (!seenJokes.has(id)){\n          seenJokes.add(id)\n          jokes.push({ id, joke, votes: 0})\n        } else {\n          console.log(\"duplicate found\");\n        }\n      }\n\n      setJokes(jokes)\n      setIsLoading(false)\n    } catch(err){\n      console.error(err)\n    }\n  }, [numJokesToGet]);\n\n  useEffect(() => {\n    getJokes()\n  }, [getJokes])\n\n  const generateNewJokes = () => {\n    setIsLoading(true)\n    getJokes()\n  }\n\n  const vote = (id, delta) => {\n    setJokes((jokes) =>\n      jokes.map((j) => (j.id === id ? { ...j, votes: j.votes + delta} : j))\n    )\n  }\n\n  if (isLoading){\n    return (\n      <div className=\"loading\">\n        <i className='fas fa-4x fa-spinner fa-spin' />\n      </div>\n    )\n  }\n\n  let sortedJokes = [...jokes].sort((a,b) => (b.votes - a.votes))\n\n  return (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={generateNewJokes}>Get N</button>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}